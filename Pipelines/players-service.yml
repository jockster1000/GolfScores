# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  dockerRegistryServiceConnection: 'dockerregistry-dev'
  imageRepository: 'golfscores.players.service'
  containerRegistry: 'golfscores.azurecr.io'
  dockerfilePath: './GolfScores.Services.Players/Dockerfile'
  tag: '$(Build.BuildId)'

  vmImageName: 'ubuntu-latest'

stages:

- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'du -a .'

    - task: Docker@2
      inputs:
        containerRegistry: 'dockerregistry-dev'
        repository: 'playerservice'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

    # - task: Docker@2
    #   displayName: Build the container image
    #   inputs:
    #     repository: '$(imageRepository)'
    #     command: 'build'
    #     Dockerfile: $(dockerfilePath)
    #     buildContext: '$(Build.SourcesDirectory)'
    #     tags: '$(tag)'
                  
    # - script: |
    #     sudo docker tag $(imageRepository):$(tag) $(containerRegistry)/$(imageRepository):$(tag)
    #   displayName: 'Tag container image before push'

    # - task: Docker@2
    #   displayName: Push the image to container registry
    #   inputs:
    #     command: push
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     buildContext: $(Build.SourcesDirectory)/GolfScores
    #     tags: |
    #       $(tag)
